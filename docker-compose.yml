version: "3"
services:
  # HADOOP
  # namenode:
  #   image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
  #   container_name: namenode-name
  #   restart: always
  #   ports:
  #     - 9870:9870
  #     - 9000:9000
  #   volumes:
  #     - hadoop_namenode:/hadoop/dfs/name
  #   environment:
  #     - CLUSTER_NAME=test
  #   env_file:
  #     - ./hadoop/hadoop.env
  #   networks:
  #     project3-network:
  #       ipv4_address: 172.25.0.2

  # datanode:
  #   image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
  #   container_name: datanode-name
  #   restart: always
  #   ports:
  #     - 9864:9864
  #   volumes:
  #     - hadoop_datanode:/hadoop/dfs/data
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9870"
  #   env_file:
  #     - ./hadoop/hadoop.env
  #   networks:
  #     project3-network:
  #       ipv4_address: 172.25.0.3
  

  # ZOOKEEPER for kafka 
  # zookeeper:
  #   image: 'bitnami/zookeeper:3'
  #   user: root
  #   container_name: zookeeper-name
  #   hostname : zoo-host
  #   ports:
  #     - '2181:2181'
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #   volumes:
  #     - "zookeeper_data:/bitnami"
  #   networks:
  #     project3-network:
  #       ipv4_address: 172.25.0.7
  # KAFKA
  # kafka:
  #   image: 'bitnami/kafka'
  #   user: root
  #   container_name: kafka-name
  #   ports:
  #     - '9092:9092'
  #   environment:
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     # - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     # - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
  #     # - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
  #   volumes:
  #     - "kafka_data:/bitnami"
  #   networks:
  #     project3-network:
  #       ipv4_address: 172.25.0.8
  #   depends_on:
  #     - zookeeper

  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    networks:
      project3-network:
        ipv4_address: 172.25.0.7

  kafka:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka-name
    ports:
      - 9092:9092
      - 19092:19092
      - 29092:29092
    environment: 

      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-name:19092,LISTENER_DOCKER_EXTERNAL://kafka-name:9092, OUTSIDE://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT, OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      project3-network:
        ipv4_address: 172.25.0.8

  #  SPARK
  spark-master:
    container_name: spark-master 
    image: bitnami/spark:3
    user: root
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER=spark://spark-master:7077
      - MASTER=spark://spark-master:7077
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_MASTER_HOST=spark-master
    
    ports:
      - '8080:8080'
    networks:
      project3-network:
        ipv4_address: 172.25.0.9
    extra_hosts:
      - 'spark-master:0.0.0.0'

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
networks:
  project3-network: 
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16 